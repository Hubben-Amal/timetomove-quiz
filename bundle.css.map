{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../src/Screen.svelte",
    "../src/End.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Question from \"./Question.svelte\";\n  import Screen from \"./Screen.svelte\";\n  import End from \"./End.svelte\";\n  import Score from \"./Score.svelte\";\n  import { current } from \"./state.js\";\n  import YAML from \"yaml\";\n  import { fly } from \"svelte/transition\";\n\n  let current_value;\n  let loading = true;\n  let screens;\n  let max_score = 0;\n\n  async function fetchAsync(url) {\n    let response = await fetch(url);\n    let data = await response.text();\n    return data;\n  }\n\n  fetchAsync(\"./screens.yml\").then(file => {\n    screens = YAML.parse(file);\n    current.set(screens[\"start\"]);\n    max_score = screens[\"options\"].score;\n    loading = false;\n  });\n\n  const unsubscribe_current = current.subscribe(value => {\n    current_value = value;\n  });\n</script>\n\n<style>\n  #root {\n    min-height: 100vh;\n    width: 100%;\n    background-image: url(\"https://timetomove.eurodesk.eu/wp-content/uploads/2019/08/bg-01.jpg\");\n    background-position: center center;\n    background-repeat: no-repeat;\n    -webkit-background-size: cover;\n    -moz-background-size: cover;\n    -o-background-size: cover;\n    background-size: cover;\n    background-attachment: fixed;\n    margin-top: 0rem;\n    margin-bottom: 0rem;\n    margin-left: 0rem;\n    margin-right: 0rem;\n  }\n</style>\n\n<svelt:head>\n  <link\n    rel=\"stylesheet\"\n    href=\"https://cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\" />\n  <meta\n    name=\"viewport\"\n    content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0\" />\n  <!--\n  <link\n    rel=\"stylesheet\"\n    href=\"https://cdnjs.cloudflare.com/ajax/libs/tachyons/4.11.1/tachyons.css\" />\n  <link\n    href=\"https://fonts.googleapis.com/css?family=Work+Sans&display=swap\"\n    rel=\"stylesheet\" />-->\n</svelt:head>\n\n<div id=\"root\" class=\"ui grid middle aligned\">\n  <div class=\"row\">\n    <div class=\"column\">\n      <div class=\"ui container\">\n        {#if loading}\n          loading\n        {:else if current_value['type'] === 'screen'}\n          <Screen {...current_value} {screens} />\n        {:else if current_value['type'] === 'question'}\n          <Question {...current_value} {screens} />\n        {:else if current_value['type'] === 'end'}\n          <End {...current_value} />\n        {:else}\n          <p>not implemented</p>\n        {/if}\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"column\">\n      <div class=\"ui container\">\n        <Score />\n      </div>\n    </div>\n  </div>\n</div>\n",
    "<script>\n  import { current, q_result } from \"./state.js\";\n  //import screens from \"./screens.js\";\n  import marked from \"marked\";\n  import { fly, fade } from \"svelte/transition\";\n\n  export let type;\n  export let text;\n  export let next;\n  export let next_text;\n  export let screens;\n\n  function nextQuestion() {\n    current.set(screens[next]);\n    q_result.set(-1);\n  }\n</script>\n\n<style>\n  .large_text {\n    font-size: 1.5rem;\n  }\n</style>\n\n<div\n  in:fly={{ y: 100, duration: 500 }}\n  class=\"ui clearing container segment large_text\">\n  <div class=\"large_text\">\n    {@html marked(text)}\n    <button class=\"ui big right floated teal button\" on:click={nextQuestion}>\n      {next_text}\n    </button>\n  </div>\n</div>\n",
    "<script>\n  import { current } from \"./state.js\";\n  import marked from \"marked\";\n  import { fly, fade } from \"svelte/transition\";\n\n  export let type;\n  export let text;\n  export let submit;\n  export let submit_text;\n</script>\n\n<style>\n  .large_text {\n    font-size: 1.5rem;\n  }\n</style>\n\n<div in:fly={{ y: 100, duration: 500 }} class=\"ui clearing container segment\">\n  <div class=\"large_text\">\n    {@html marked(text)}\n    <a class=\"ui big teal button\" href={submit} target=\"_blank\">\n      {submit_text}\n    </a>\n  </div>\n</div>\n"
  ],
  "names": [],
  "mappings": "AAiCE,KAAK,cAAC,CAAC,AACL,UAAU,CAAE,KAAK,CACjB,KAAK,CAAE,IAAI,CACX,gBAAgB,CAAE,IAAI,qEAAqE,CAAC,CAC5F,mBAAmB,CAAE,MAAM,CAAC,MAAM,CAClC,iBAAiB,CAAE,SAAS,CAC5B,uBAAuB,CAAE,KAAK,CAC9B,oBAAoB,CAAE,KAAK,CAC3B,kBAAkB,CAAE,KAAK,CACzB,eAAe,CAAE,KAAK,CACtB,qBAAqB,CAAE,KAAK,CAC5B,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,IAAI,CACnB,WAAW,CAAE,IAAI,CACjB,YAAY,CAAE,IAAI,AACpB,CAAC;AC7BD,WAAW,eAAC,CAAC,AACX,SAAS,CAAE,MAAM,AACnB,CAAC;ACTD,WAAW,eAAC,CAAC,AACX,SAAS,CAAE,MAAM,AACnB,CAAC"
}